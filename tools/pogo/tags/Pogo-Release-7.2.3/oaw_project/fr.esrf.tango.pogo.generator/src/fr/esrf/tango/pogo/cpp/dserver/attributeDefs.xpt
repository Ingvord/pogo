«IMPORT pogoDsl»
«EXTENSION fr::esrf::tango::pogo::cpp::_CppConstants»
«EXTENSION fr::esrf::tango::pogo::cpp::_CppUtil»

«DEFINE headerFile FOR PogoDeviceClass»
//=========================================
//	Define classes for attributes
//=========================================
«FOREACH attributes AS att-»
«IF att.status.concreteHere=="true"-»
//	Attribute «att.name» class definition
class «att.name»Attrib: public Tango::«IF att.attType!="Scalar"»«att.attType»«ENDIF»Attr
{
public:
	«att.name»Attrib():«IF att.attType!="Scalar"»«att.attType»«ENDIF»Attr("«att.name»",
	                   «att.dataType.cppTypeEnum()», «IF att.rwType=="READ_WITH_WRITE"»"«att.associatedAttr»"«ELSE»Tango::«att.rwType»«attConstructorSize(att)»«ENDIF») {};
	~«att.name»Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
		{(static_cast<«name» *>(dev))->read_«att.name»(att);}
	«IF att.rwType.contains("WRITE")-»
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
		{(static_cast<«name» *>(dev))->write_«att.name»(att);}
	«ENDIF-»
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
		{return (static_cast<«name» *>(dev))->is_«att.name»_allowed(ty);}
};

«ENDIF»«ENDFOREACH»
«ENDDEFINE»


